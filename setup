#!/bin/bash

set -e

export PATH=$HOME/.rbenv/shims:/usr/local/bin:$PATH

# Install brew & brewed packages {{{
if ! /usr/bin/which -s brew; then
  sudo mkdir -p /usr/local/bin
  sudo chown -R $(whoami) /usr/local
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

sh ./Brewbundle
# }}}

export GOPATH=$HOME/_go
export GOROOT=$(go env GOROOT)

# install $HOME/bin {{{
if [ ! -d ~/bin ]; then
  git clone https://github.com/ToQoz/bin.git ~/_dev/github.com/ToQoz/bin
  ln -sf ~/_dev/github.com/ToQoz/bin ~/bin
fi
# }}}

# install ToQoz/awsenv {{{
if [ ! -d ~/.awsenv ]; then
  if [ ! -d ~/_dev/github.com/ToQoz/awsenv ]; then
    git clone https://github.com/ToQoz/awsenv.git ~/_dev/github.com/ToQoz/awsenv
  fi
  ln -sf ~/_dev/github.com/ToQoz/awsenv ~/.awsenv
fi
# }}}

# Configure colors {{{
if [ ! -f ~/.Xresources ]; then
  curl 'https://gist.githubusercontent.com/w0ng/3278077/raw/073a61b47ccfea8a7ea30b5aabde3f3acc09ca03/.Xresources-hybrid' > ~/.Xresources
  curl 'https://raw.githubusercontent.com/chriskempson/tomorrow-theme/master/OS%20X%20Terminal/Tomorrow%20Night.terminal'
fi
# }}}

# Configure karabiner/seil {{{
./osx/karabiner/config.sh
./osx/seil/config.sh
# }}}

# Set dock's defaults {{{
# Hide dock automatically
defaults write com.apple.dock autohide -bool true
# Don't delay on autohide
defaults write com.apple.dock autohide-delay -float 0
# Animate quickly on expose
defaults write com.apple.dock expose-animation-duration -float 0.1
# Don't allow bouncing
defaults write com.apple.dock no-bouncing -bool true
# Disable dashboard
defaults write com.apple.dashboard mcx-disabled -boolean true
# }}}

# Login items {{{
loginitems -a SandS -p '/Applications/SandS.app'
loginitems -a Slate -p '/Applications/Slate.app'
loginitems -a Hammerspoon -p '/Applications/Hammerspoon.app'
# }}}

# Set finder's defaults {{{
# Search in current dir
defaults write com.apple.finder FXDefaultSearchScope -string 'SCcf'
# Show list view
defaults write com.apple.finder FXPreferredViewStyle -string "Nslv"
# Don't confirm changing file ext
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
# Show fielpath in Title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
# Don't show icons on Desktop
defaults write com.apple.finder CreateDesktop -bool false
# }}}

# Set safari's defaults {{{
# Don't omit URL in AddressBar
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
# Don't open downloaded safe file automatically
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
# Set 'about:blank' as HomePage
defaults write com.apple.Safari HomePage -string "about:blank"
# Show DeelopMenu in ManuBar
defaults write com.apple.Safari IncludeDevelopMenu -bool true
# Show InternalDebugMenu in DebugMenu
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
# }}}

# Set TextEdit's defaults {{{
defaults write com.apple.TextEdit AddExtensionToNewPlainTextFiles -bool false
defaults write com.apple.TextEdit CheckSpellingWhileTyping -bool false
defaults write com.apple.TextEdit CorrectSpellingAutomatically -bool false
# Disable RichText
defaults write com.apple.TextEdit RichText -bool false
# Use UTF-8 for read
defaults write com.apple.TextEdit PlainTextEncoding -int 4
# Use UTF-8 for write
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
defaults write com.apple.TextEdit SmartDashes -bool false
defaults write com.apple.TextEdit TextReplacement -bool false
defaults write com.apple.TextEdit RichText -bool false
defaults write com.apple.TextEdit ShowRuler -bool false
defaults write com.apple.TextEdit SmartCopyPaste -bool false
defaults write com.apple.TextEdit SmartDashes -bool false
defaults write com.apple.TextEdit SmartQuotes -bool false
defaults write com.apple.TextEdit TextReplacement -bool false
# }}}

# Set YoruFukurou's defaults {{{
defaults write com.YoruFukurouProject.YoruFukurou DisplayApplicationQuitWarning -bool false
# }}}

# Set SourceTree's defaults {{{
defaults write com.torusknot.SourceTreeNotMAS agreedToUpdateConfig -bool false
# }}}

# Set global's defaults {{{
# Don't check spell
defaults write -g NSAutomaticSpellingCorrectionEnabled -bool false
# Don't resume
defaults write -g NSQuitAlwaysKeepsWindows -bool false
# Don't save to iCloud
defaults write -g NSDocumentSaveNewDocumentsToCloud -bool false

defaults write -g NSScrollAnimationEnabled -bool NO
# }}}

killall Finder
killall Dock
#killall Safari
#killall SystemUIServer

# Install dotfiles {{{
go run installer/install.go
# }}}

# Install ruby & gems(cmd) {{{
if [ $(rbenv versions | grep 2.3.1 | wc -l) = 0 ]; then
  rbenv install 2.3.1
  rbenv global 2.3.1
fi
sh ./Gembundle
rbenv rehash

# }}}

# Install go packages(cmd) {{{
sh ./Gobundle
# }}}

mkdir -p ~/bin
qiita-dl -x -d ~/bin http://qiita.com/uasi/items/57da2e4268d348b371fb

# dropbox sync {{{
if [ -n "$DROPBOX" ]; then
  remotes=("Desktop" "Documents" "Downloads")
  for remotedir in "${files[@]}"; do
    if [ ! $(/usr/bin/readlink $remotedir) ]; then
      test -f $HOME/$remotedir/.localized && rm $HOME/$remotedir/.localized
      test -d $HOME/$remotedir && sudo rmdir $HOME/$remotedir

      test -d $HOME/Dropbox/$remotedir || mkdir $HOME/Dropbox/$remotedir
      ln -sf  $HOME/Dropbox/$remotedir $HOME/$remotedir
    fi
  done

  # Fetch projects {{{
  osascript -e 'tell application "Dropbox" to run'

  # wait for sync ~/Dropbox/ghq-list.txt and ~/Dropbox/go-list.txt
  while [ : ]
  do
    ls ~/Dropbox/ghq-list.txt && ls ~/Dropbox/go-list.txt && break
    sleep 3
  done

  ghq import < ~/Dropbox/ghq-list.txt
  # インストールしたいわけじゃなくて、リポジトリあつめてきたいだけなのでgo get -d
  go get -d $(cat ~/Dropbox/go-list.txt)
  # }}}
fi
# }}}

# vim:set ft=sh et foldmethod=marker:
