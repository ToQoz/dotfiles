set-option -g prefix C-t
set-option -g set-titles on
set-option -gw mode-mouse off

# Appearance {{{
set -g status-position top
set -g status-attr dim
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour251,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,bold]⮀"

set -g status-right '#(tmux show-option -gw mode-mouse | sed "s/mode-//;s/ /:/") #[fg=colour241] #H ⮃ #(~/.tmux.d/bin/ssid) ⮃ #I:#P #[fg=colour255,bold]⮂#[fg=colour31,bg=colour255,bold] %Y/%m/%d(%a)%H:%M#[default]'
set -g message-attr bold
set -g message-fg white
set -g message-bg red
set -g default-terminal screen-256color
set -g message-attr bold
set -g message-fg white
set -g message-bg red

set  -g pane-active-border-fg cyan
set  -g pane-active-border-bg black
setw -g window-status-current-fg blue

set-window-option -g utf8 on
set-window-option -g mode-keys vi
set-window-option -g mode-bg white
set-window-option -g mode-fg black
set-window-option -g window-status-fg white
set-window-option -g window-status-bg black
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg green
# }}}

unbind C-r
bind C-r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# Toggle mouse-mode
unbind m
bind-key m \
  if-shell "tmux show-options -gw mode-mouse | grep off" "set-option -gq mouse-utf8 on" "set-option -gq mouse-utf8 off" \;\
  if-shell "tmux show-options -gw mode-mouse | grep off" "set-option -gq mouse-resize-pane on" "set-option -gq mouse-resize-pane off" \;\
  if-shell "tmux show-options -gw mode-mouse | grep off" "set-option -gq mouse-select-pane on" "set-option -gq mouse-select-pane off" \;\
  if-shell "tmux show-options -gw mode-mouse | grep off" "set-option -gq mouse-select-window on" "set-option -gq mouse-select-window off" \;\
  if-shell "tmux show-options -gw mode-mouse | grep off" "set-option -gw mode-mouse on" "set-option -gw mode-mouse off"

unbind P
bind-key P command-prompt -p 'Capture pane and save it as file:' -I '~/.tmux.capture' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# http://d.hatena.ne.jp/naoya/20130108/1357630895
unbind e
bind e command-prompt "split-window -p 65 'exec %%'"

# Window keybindings {{{
# New
unbind c
bind c new-window

# Split
unbind |
bind | split-window -hc "#{pane_current_path}"
unbind -
bind - split-window -vc "#{pane_current_path}"
bind 'c' new-window -c "#{pane_current_path}"

# Swap
# http://toqoz.hateblo.jp/entry/2013/10/12/025544
set-option -g renumber-windows on
unbind h
bind -r h run 'cw=$(tmux display-message -p \#I) && [ $cw -gt 0 ] && tmux swap-window -s $cw -t $(($cw - 1))'
unbind l
bind -r l run 'cw=$(tmux display-message -p \#I) && tmux swap-window -s $cw -t $(($cw + 1))'

# Resize
# @option -r: is enable to repeat
unbind C-h
bind -r C-h resize-pane -L 6
unbind C-l
bind -r C-l resize-pane -R 6
unbind C-j
bind -r C-j resize-pane -D 6
unbind C-k
bind -r C-k resize-pane -U 6
# }}}

# Pane keybindings {{{
# Swap with previous pane.
# @option -r: is enable to repeat
unbind s
bind -r s swap-pane -U

# Kill
unbind K
bind K kill-pane

# Cut off target-pane from window including this, then be single pane in new window.
unbind 1
bind 1 break-pane
# }}}

# Copy mode settings {{{
# Act as vi in copy mode
unbind v
bind -t vi-copy 'v' begin-selection
unbind y
bind y copy-mode
bind -t vi-copy 'y' copy-selection
unbind p
bind p paste-buffer
# }}}

# vim:set ft=conf et foldmethod=marker:
